{"version":3,"sources":["ozzy.jpg","Picture.js","Data.js","MovieList.js","MovieContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Picture","className","id","src","Img","alt","React","Component","api","axios","create","baseURL","MovieList","ImageClick","event","parent","target","parentNode","classList","contains","ratedEmoji","lastChild","removeChild","remove","add","hangLoose","document","createElement","innerHTML","appendChild","this","props","movie","poster_path","onClick","original_title","genre_ids","MovieContainer","deleteCurrentList","querySelector","handleMovieData","object","setState","filmes","state","concat","results","console","log","fetchFavorites","number","endPoint","fetch","then","data","json","suggestion","ratedMovies","getElementsByClassName","arrayOfGenres","map","element","firstChild","nextSibling","innerText","finalArray","final","forEach","push","parseInt","finalNoRepeat","Set","handleClick","window","location","reload","get","response","filme","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e21c3bfb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ozzy.17d9e5e0.jpg\";","import React from 'react';\nimport Img from './ozzy.jpg'\n\nclass Picture extends React.Component {\n\n  render() {\n    return (\n      <div className=\"picture-container\">\n        <img id=\"personal-picture\" src={Img} className=\"image-meme\" alt=\"personal\"></img>\n        <p><strong>Your Photo</strong></p>\n      </div>\n    )\n  }\n}\n\nexport default Picture;","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/week?api_key=52d3e97323f3329ba592b46f79041c81'\n})\n\n\nexport default api;","import React from 'react'\n\nclass MovieList extends React.Component {\n  // Adicionando evento de click as imagens dos filmes, inclui uma classe rated para o elemento de classe (movie-item) que contem as informações dos filmes (titulo, imagem e id do genêro). Além disso inclui um novo paragrafo com o icone thumbs up. \n  ImageClick = (event) => {\n    const parent = event.target.parentNode\n\n    if (parent.classList.contains('rated')) {\n      const ratedEmoji = parent.lastChild\n      parent.removeChild(ratedEmoji)\n      parent.classList.remove('rated')\n    } else {\n      parent.classList.add('rated')\n      const hangLoose = document.createElement('p')\n      hangLoose.innerHTML = '<span><i class=\"fas fa-thumbs-up\"></i></span>'\n      parent.appendChild(hangLoose)\n    }\n  }\n\n  \n  render() {\n    return(\n      <div className=\"movie-item\">\n          <img className=\"movie-image\" src={`https://image.tmdb.org/t/p/w500${this.props.movie.poster_path}`} onClick={this.ImageClick}></img>\n          <h1>{this.props.movie.original_title}</h1>\n          <p className=\"genre-id\">{this.props.movie.genre_ids[0]}</p>\n      </div>\n    )  \n  }\n}\n\nexport default MovieList;","import React from 'react'\nimport api from './Data'\nimport MovieList from './MovieList'\n\nclass MovieContainer extends React.Component {\n  // Ao clicar em make my day, \n  // a listagem de filmes atual será substituida pela nova consulta\n  deleteCurrentList = () => {\n    const movieList = document.querySelector('.movie-list')\n    movieList.innerHTML = ''\n  }\n  // Atualiza a listagem de filmes com os dados retornados da api.\n  handleMovieData = (object) => {\n    this.setState({ filmes: this.state.filmes.concat(object.results)})\n    console.log(this.state)\n  }\n  // A api faz a busca dos filmes por genero(o que foi curtido pelo usuário), popularidade e lançamento em 2019.\n  fetchFavorites = (number) => {\n    const endPoint = `https://api.themoviedb.org/3/discover/movie?api_key=52d3e97323f3329ba592b46f79041c81&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${number}&primary_release_year=2019&page=1`\n    fetch(endPoint)\n      .then(data => data.json())\n      .then(data => this.handleMovieData(data))\n  }\n\n  // A função inicia após o usuário clicar no botão make my day. Captura todos os genre_ids dos filmes curtidos e os utiliza para uma nova api retornando filmes de mesmo genero.\n  suggestion = () => {\n    const ratedMovies = document.getElementsByClassName('rated')\n    const data = [...ratedMovies]\n    const arrayOfGenres = data.map(element => element.firstChild.nextSibling.nextSibling.innerText)\n    \n    let finalArray = []\n    const final = arrayOfGenres.forEach(number => finalArray.push(parseInt(number)))\n    const finalNoRepeat = [...new Set(finalArray)]\n    \n    this.deleteCurrentList()\n    finalNoRepeat.forEach(number => this.fetchFavorites(number))\n\n    return final\n  }\n\n  state= {\n    filmes: [],\n  }\n\n    // Após o retorno da api guarda os dados do filme em this state. A api retorna os trending filmes da semana.\n    async componentDidMount() {\n      const response = await api.get('')\n      this.setState({ filmes: response.data.results})\n    }\n    // Recarrega a página ao clicar no botão reload movies\n    handleClick = () => {\n      window.location.reload(true)\n    }\n  \n  \n  render() {\n    // variável que guarda um array de Objetos contendo as informações dos filmes\n    const {filmes} = this.state\n    return(\n      <div className=\"movie-container\">\n        <div className=\"movie-container-title\">\n          <h1>Movie List</h1>\n          <div className=\"button-container\">\n            <button className=\"suggestion-button\" onClick={this.suggestion}><i className=\"fas fa-heart\"></i>Make my day</button>\n            <button className=\"load-button\" onClick={this.handleClick}><i className=\"fas fa-sync\"></i>Reload Movies</button>\n          </div>\n        </div>\n        {/* A cada iteração um objeto (filme) é passado como argumento do componente MovieList */}\n        <div className=\"movie-list\">\n          {filmes.map(filme => <MovieList  movie={filme} />)}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default MovieContainer;","import React from 'react'\nimport './App.css';\nimport Picture from './Picture'\nimport MovieContainer from './MovieContainer'\n\n// Componente principal do Projeto\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n          <h1><i className=\"fas fa-film\"></i>The Movie App</h1>\n      </header>\n      <Picture />\n      <MovieContainer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}